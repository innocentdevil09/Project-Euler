import java.math.BigInteger;

public class Problem38 {
    public static void main(String[] args) {
        int max = 0;
        for (int i = 1; i < 10000; i++) {
            BigInteger product = getProduct(i);
            if (product.intValue() > max && isPanDigital(product.toString())) {
                max = product.intValue();
            }
        }
        System.out.println("Largest concatenated product that is pan-digital - " + max);
    }

    private static BigInteger getProduct(int n) {
        StringBuilder sb = new StringBuilder();
        for (int i = 1; sb.length() < 9; i++) {
            sb.append(n * i);
        }
        return new BigInteger(sb.toString());
    }

    private static boolean isPanDigital(String val) {
        if (val.length() != 9) { return false; }
        for (char c = '1'; c <= '9'; c++) {
            if (!val.contains(Character.toString(c))) { return false; }
        }
        return true;
    }
}
