package com.euler;

import java.math.BigInteger;

public class Problem53 {
    /**
     * Method to calculate factorial of a number
     *
     * @param i
     */
    private static BigInteger factorial(int i) {
        BigInteger product = BigInteger.ONE;
        while (i > 0) {
            product = product.multiply(new BigInteger(String.valueOf(i)));
            i--;
        }
        return product;
    }

    /**
     * Method to get binomial coefficient value
     *
     * @param n
     * @param r
     * @param nMinusR
     */
    private static BigInteger getValue(int n, int r, int nMinusR) {
        BigInteger nFactorial = factorial(n);
        BigInteger rFactorial = factorial(r);
        BigInteger nMinusRFactorial = factorial(nMinusR);

        return nFactorial.divide(rFactorial.multiply(nMinusRFactorial));
    }

    /**
     * Main method to get answer. Total time taken - 180 ms
     *
     * @param args
     */
    public static void main(String[] args) {
        long startTime = System.currentTimeMillis();

        int count = 0;
        for (int n = 22; n <= 100; n++) {
            for (int r = 1; r < n; r++) {
                BigInteger val = getValue(n, r, n - r);
                if (val.toString().length() > 6) { count++; }
            }
        }
        System.out.println("Answer = " + count);
        long endTime = System.currentTimeMillis();
        System.out.println("Total time taken = " + (endTime - startTime));
    }
}
