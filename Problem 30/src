import java.util.ArrayList;
import java.util.List;

public class Problem30 {
    /**
     * Main method to check for all numbers that has fifth exponent sum of its single digits equal to the same number
     * Prints the sum of these numbers
     *
     * @param args
     */
    public static void main(String[] args) {
        List<Integer> numbers = new ArrayList<>();
        for (int i = 2; i < 1000000; i++) {
            List<Integer> singleDigits = getSingleDigits(i);
            int exponentSum = exponentSum(singleDigits, 5);
            if (exponentSum == i) {
                numbers.add(i);
            }
        }
        int[] result = new int[1];
        result[0] = 0;
        numbers.forEach(n -> result[0] += n);
        System.out.println("Total numbers : " + numbers.size());
        System.out.println("Result : " + result[0]);
    }

    /**
     * Get all the single digits in the given number and returns as a list
     *
     * @param n
     */
    private static List<Integer> getSingleDigits(int n) {
        List<Integer> digits = new ArrayList<>();
        while (n > 0) {
            int rem = n % 10;
            digits.add(rem);
            n /= 10;
        }
        return digits;
    }

    /**
     * Returns the sum of all single digits raised to the power given as exponent
     *
     * @param digits
     * @param exp
     */
    private static int exponentSum(List<Integer> digits, int exp) {
        int sum = 0;
        for (int d : digits) {
            int val = (int) Math.pow(d, exp);
            sum += val;
        }
        return sum;
    }
}
