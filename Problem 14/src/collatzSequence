package collatzSequence;

import java.util.ArrayList;

public class Main {
	private static long getChainSize(long n) {
		if (n < 0) throw new IllegalArgumentException();
		if (n == 1) return 1;
		long count = 0;
//		ArrayList<Integer> arr = new ArrayList<Integer>();
//		arr.add(new Integer(n));
		while (n > 1) {
			if (n % 2 == 0) {
				n /= 2;
//				arr.add(new Integer(n));
				count++;
			} else {
				n = (3 * n) + 1;
//				arr.add(new Integer(n));
				count++;
			}
		}
		return count + 1;
	}
	public static void main(String[] args) {
		long max = 0;
		long val = 0;
		for (long i = 1; i < 1000000; i++) {
			long size = getChainSize(i);
			if (max < size) {
				max = size;
				val = i;
			}
		}
		System.out.println(val);
	}
}
